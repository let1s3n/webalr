@import "bootstrap/scss/mixins";
@import "bootstrap/scss/maps";

@mixin font($font-family, $font-file) {
  @font-face {
    font-family: $font-family;
    src: url($font-file);
  }
}

@include font('futura-thin', $bucket+'fonts/Futura/FuturaStdLight.otf');
@include font('futura-regular', $bucket+'fonts/Futura/FuturaStdBook.otf');
@include font('futura-medium', $bucket+'fonts/Futura/FuturaStdMedium.otf');
@include font('futura-bold', $bucket+'fonts/Futura/FuturaStdBold.otf');

$custom-spacers: (
  6:$spacer*4,
  7:$spacer*4.5,
  8:$spacer*5,
  9:$spacer*5.5,
  10:$spacer*6,
  11:$spacer*6.5,
  12:$spacer*7,
  13:$spacer*7.5,
  14:$spacer*8,
  15:$spacer*8.5,
  16:$spacer*9,
  17:$spacer*9.5,
  18:$spacer*10,
  19:$spacer*10.5,
  20:$spacer*11,
  21:$spacer*11.5
);
$spacers: map-merge($spacers, $custom-spacers);

$custom-theme-colors: (
  "basic1":$basic1,
  "blue1":$blue1,
  "blue2":$blue2,
  "blue3":$blue3,
  "yellow1":$yellow1,
  "yellow2":$yellow2,
  "yellow3":$yellow3
);

$theme-colors: map-merge($theme-colors, $custom-theme-colors);
$theme-colors-rgb: map-loop($theme-colors, to-rgb, "$value");
$utilities-colors: map-merge($utilities-colors, $theme-colors-rgb);
$utilities-text: map-merge($utilities-colors, ("black": to-rgb($black), "white": to-rgb($white), "body": to-rgb($body-color)));
$utilities-text-colors: map-loop($utilities-text, rgba-css-var, "$key", "text");
$utilities-bg-colors: map-loop($utilities-colors, rgba-css-var, "$key", "bg");



$utilities: (
  "font-size": (rfs: false,
    property: font-size,
    class: fs,
    values: $font-sizes ),
);

@import "bootstrap/scss/utilities";



$utilities: map-merge($utilities, ("custom-font": (rfs: false,
        responsive: true,
        property: font-size,
        class: custom-font,
        values: (1:$font-size-base*4.375,
          2: $font-size-base*3.5,
          3: $font-size-base*3,
          6:$font-size-base*1.125 ))),
  );

$utilities: map-merge($utilities, ("position": map-merge(map-get($utilities, "position"),
        (responsive: true),
      ),
    ));

$utilities: map-merge($utilities, ("translate-middle": map-merge(map-get($utilities, "translate-middle"),
        (responsive: true),
      ),
    ));

$utilities: map-merge($utilities, ("bg-opacity": map-merge(map-get($utilities, "bg-opacity"),
        (values: map-merge(map-get(map-get($utilities, "bg-opacity"), "values"),
            (40: .4,
              60:.6,
              70:.7,
              80:.8,
              90:.9),
          ),
        ),
      ),
    ));
$utilities: map-merge($utilities, ("font-size": map-merge(map-get($utilities, "font-size"),
        (responsive: true),
      ),
    ));

$utilities: map-merge($utilities, ("font-weight": map-merge(map-get($utilities, "font-weight"),
        (responsive: true),
      ),
    ));

$utilities: map-merge($utilities, ("width": map-merge(map-get($utilities, "width"),
        (responsive: true),
      ),
    ));


@import "bootstrap/scss/root";